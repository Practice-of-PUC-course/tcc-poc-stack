# POC stack - services and apps
version: '3.4'

services:
  load_balance:
    image: nginx:1.21-alpine
    container_name: load_balance
    depends_on:
      - "gsmaster"
      - "gsworker"
      # - "webmap"
      - "address-form"
      - "registry-api"
      - "address-geocode"
      - "pgadmin4"
    restart: always
    networks:
      - proxy
    ports:
      - "80:80"
    volumes: 
      - ${POC_BASE_DIR}/proxy/nginx/conf.d:/etc/nginx/conf.d:ro
      - ${POC_BASE_DIR}/proxy/data:/var/log/nginx

  gsmaster:
    image: terrabrasilis/geoserver-master:v1.0.6
    container_name: gsmaster
    restart: always
    ports:
      - "8000:8080"
    networks:
      - proxy
      - backend
    volumes: 
      - ${POC_BASE_DIR}/geoserver/gs_datadir:/var/local/geoserver
      - ${POC_BASE_DIR}/geoserver/gs_extensions:/var/local/geoserver-exts
    env_file:
      - ${POC_BASE_DIR}/geoserver/master.env

  gsworker:
    image: terrabrasilis/geoserver-worker:v1.0.6
    container_name: gsworker
    restart: always
    ports:
      - "8001:8080"
    networks:
      - proxy
      - backend
    volumes:
      - ${POC_BASE_DIR}/geoserver/gs_datadir:/var/local/geoserver
      - ${POC_BASE_DIR}/geoserver/gs_extensions:/var/local/geoserver-exts
    env_file:
      - ${POC_BASE_DIR}/geoserver/worker.env

  # webmap:
  #   image: softwarevale/webmap:v1.0.0
  #   container_name: webmap
  #   restart: always
  #   ports:
  #     - "8002:80"
  #   networks:
  #     - proxy
  #   volumes:
  #     - ${POC_BASE_DIR}/webmap/data:/data

  address-form:
    image:  softwarevale/tcc-address-form:v1.0.1
    container_name: address-form
    restart: always
    ports:
      - "8003:3000"
    networks:
      - proxy
      - backend
    volumes:
      - ${POC_BASE_DIR}/address-form/data:/data
    depends_on:
      - address-geocode
      - registry-api
    env_file:
      - ${POC_BASE_DIR}/address-form/.env

  registry-api:
    image:  softwarevale/tcc-registry-api:v1.1.0
    container_name: registry-api
    restart: always
    ports:
      - "8004:3000"
    networks:
      - proxy
      - backend
    volumes:
      - ${POC_BASE_DIR}/registry-api/data:/data
    depends_on:
      - postgresdb
    env_file:
      - ${POC_BASE_DIR}/registry-api/.env

  address-geocode:
    image:  softwarevale/tcc-address-geocode:v1.0.0
    container_name: address-geocode
    restart: always
    ports:
      - "8005:3000"
    networks:
      - proxy
      - backend
    volumes:
      - ${POC_BASE_DIR}/address-geocode/data:/data
    env_file:
      - ${POC_BASE_DIR}/address-geocode/.env

  postgresdb:
    image: kartoza/postgis:13
    container_name: postgresdb
    restart: always
    volumes:
      - ${POC_BASE_DIR}/postgresdb/data:/var/lib/postgresql
    ports:
      - "5433:5432"
    networks:
      - backend
    env_file:
      - ${POC_BASE_DIR}/postgresdb/.env

  pgadmin4:
    image: dpage/pgadmin4:6.8
    container_name: pgadmin4
    restart: always
    ports:
      - "5555:80"
    volumes:
      - ${POC_BASE_DIR}/pgclient/data:/var/lib/pgadmin
    networks:
      - proxy
      - backend
    depends_on:
      - postgresdb
    env_file:
      - ${POC_BASE_DIR}/pgclient/.env

networks:
  proxy:
  backend:
